databases:
  - name: postgresql
    plan: free
    region: singapore
services:
  # Frontend Service
  - type: web
    name: cn334-frontend
    env: node
    region: singapore
    rootDir: app_frontend
    buildCommand: npm install && npm run build
    startCommand: npm start
    plan: free
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_USER_API_URL
        value: https://cn334-user-service.onrender.com
      - key: NEXT_PUBLIC_PRODUCT_API_URL
        value: https://cn334-product-service.onrender.com

  # User Service (Django/Python)
  - type: web
    name: cn334-user-service
    env: docker
    region: singapore
    dockerfilePath: ./user_service/Dockerfile
    plan: free
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: DJANGO_SETTINGS_MODULE
        value: user_service.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        fromDatabase:
          name: postgresql
          property: connectionString
      - key: ALLOWED_HOSTS
        value: cn334-user-service.onrender.com

  # Product Service (Django/Python)
  - type: web
    name: cn334-product-service
    env: docker
    region: singapore
    dockerfilePath: ./product_service/Dockerfile
    plan: free
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: DJANGO_SETTINGS_MODULE
        value: product_service.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        fromDatabase:
          name: postgresql
          property: connectionString
      - key: ALLOWED_HOSTS
        value: cn334-product-service.onrender.com

  # App Service
  - type: web
    name: cn334-app
    env: docker
    region: singapore
    dockerfilePath: ./Dockerfile
    plan: free
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_API_URL
        value: https://cn334-app.onrender.com
